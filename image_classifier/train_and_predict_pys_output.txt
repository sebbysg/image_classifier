PS C:\Users\sebby\OneDrive\Documents\Python Scripts> python train.py flowers --save_dir checkpoints --arch vgg16 --epochs 5
C:\Users\sebby\anaconda3\Lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\Users\sebby\anaconda3\Lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Epoch 1/5.. Train loss: 4.797.. Validation loss: 4.092.. Validation accuracy: 0.185
Epoch 1/5.. Train loss: 3.895.. Validation loss: 3.294.. Validation accuracy: 0.276
Epoch 1/5.. Train loss: 3.470.. Validation loss: 2.700.. Validation accuracy: 0.399
Epoch 1/5.. Train loss: 2.961.. Validation loss: 2.317.. Validation accuracy: 0.497
Epoch 1/5.. Train loss: 2.673.. Validation loss: 2.036.. Validation accuracy: 0.517
Epoch 1/5.. Train loss: 2.523.. Validation loss: 1.741.. Validation accuracy: 0.591
Epoch 1/5.. Train loss: 2.208.. Validation loss: 1.441.. Validation accuracy: 0.678
Epoch 1/5.. Train loss: 2.173.. Validation loss: 1.427.. Validation accuracy: 0.650
Epoch 1/5.. Train loss: 1.997.. Validation loss: 1.295.. Validation accuracy: 0.676
Epoch 1/5.. Train loss: 1.965.. Validation loss: 1.110.. Validation accuracy: 0.726
Epoch 1/5.. Train loss: 1.715.. Validation loss: 1.037.. Validation accuracy: 0.732
Epoch 1/5.. Train loss: 1.650.. Validation loss: 1.082.. Validation accuracy: 0.710
Epoch 1/5.. Train loss: 1.460.. Validation loss: 1.005.. Validation accuracy: 0.733
Epoch 1/5.. Train loss: 1.541.. Validation loss: 0.929.. Validation accuracy: 0.759
Epoch 1/5.. Train loss: 1.513.. Validation loss: 0.869.. Validation accuracy: 0.779
Epoch 1/5.. Train loss: 1.540.. Validation loss: 0.822.. Validation accuracy: 0.785
Epoch 1/5.. Train loss: 1.413.. Validation loss: 0.803.. Validation accuracy: 0.800
Epoch 1/5.. Train loss: 1.406.. Validation loss: 0.774.. Validation accuracy: 0.798
Epoch 1/5.. Train loss: 1.232.. Validation loss: 0.697.. Validation accuracy: 0.821
Epoch 1/5.. Train loss: 1.255.. Validation loss: 0.706.. Validation accuracy: 0.809
Epoch 2/5.. Train loss: 1.256.. Validation loss: 0.702.. Validation accuracy: 0.800
Epoch 2/5.. Train loss: 1.120.. Validation loss: 0.696.. Validation accuracy: 0.804
Epoch 2/5.. Train loss: 1.160.. Validation loss: 0.663.. Validation accuracy: 0.816
Epoch 2/5.. Train loss: 1.048.. Validation loss: 0.628.. Validation accuracy: 0.826
Epoch 2/5.. Train loss: 0.861.. Validation loss: 0.597.. Validation accuracy: 0.845
Epoch 2/5.. Train loss: 0.965.. Validation loss: 0.571.. Validation accuracy: 0.849
Epoch 2/5.. Train loss: 1.170.. Validation loss: 0.546.. Validation accuracy: 0.854
Epoch 2/5.. Train loss: 0.996.. Validation loss: 0.558.. Validation accuracy: 0.841
Epoch 2/5.. Train loss: 0.999.. Validation loss: 0.563.. Validation accuracy: 0.850
Epoch 2/5.. Train loss: 1.062.. Validation loss: 0.512.. Validation accuracy: 0.862
Epoch 2/5.. Train loss: 0.875.. Validation loss: 0.566.. Validation accuracy: 0.851
Epoch 2/5.. Train loss: 0.984.. Validation loss: 0.530.. Validation accuracy: 0.868
Epoch 2/5.. Train loss: 0.904.. Validation loss: 0.535.. Validation accuracy: 0.855
Epoch 2/5.. Train loss: 1.003.. Validation loss: 0.542.. Validation accuracy: 0.863
Epoch 2/5.. Train loss: 0.995.. Validation loss: 0.585.. Validation accuracy: 0.842
Epoch 2/5.. Train loss: 1.044.. Validation loss: 0.586.. Validation accuracy: 0.843
Epoch 2/5.. Train loss: 1.109.. Validation loss: 0.591.. Validation accuracy: 0.833
Epoch 2/5.. Train loss: 0.885.. Validation loss: 0.543.. Validation accuracy: 0.844
Epoch 2/5.. Train loss: 1.030.. Validation loss: 0.590.. Validation accuracy: 0.838
Epoch 2/5.. Train loss: 1.028.. Validation loss: 0.521.. Validation accuracy: 0.868
Epoch 2/5.. Train loss: 0.991.. Validation loss: 0.528.. Validation accuracy: 0.858
Epoch 3/5.. Train loss: 0.832.. Validation loss: 0.555.. Validation accuracy: 0.840
Epoch 3/5.. Train loss: 0.801.. Validation loss: 0.527.. Validation accuracy: 0.846
Epoch 3/5.. Train loss: 0.807.. Validation loss: 0.474.. Validation accuracy: 0.871
Epoch 3/5.. Train loss: 0.825.. Validation loss: 0.501.. Validation accuracy: 0.866
Epoch 3/5.. Train loss: 0.788.. Validation loss: 0.532.. Validation accuracy: 0.858
Epoch 3/5.. Train loss: 0.766.. Validation loss: 0.484.. Validation accuracy: 0.879
Epoch 3/5.. Train loss: 0.952.. Validation loss: 0.485.. Validation accuracy: 0.862
Epoch 3/5.. Train loss: 0.920.. Validation loss: 0.489.. Validation accuracy: 0.866
Epoch 3/5.. Train loss: 0.842.. Validation loss: 0.509.. Validation accuracy: 0.860
Epoch 3/5.. Train loss: 0.882.. Validation loss: 0.540.. Validation accuracy: 0.859
Epoch 3/5.. Train loss: 0.758.. Validation loss: 0.478.. Validation accuracy: 0.881
Epoch 3/5.. Train loss: 0.753.. Validation loss: 0.450.. Validation accuracy: 0.882
Epoch 3/5.. Train loss: 0.782.. Validation loss: 0.467.. Validation accuracy: 0.880
Epoch 3/5.. Train loss: 0.842.. Validation loss: 0.504.. Validation accuracy: 0.859
Epoch 3/5.. Train loss: 0.928.. Validation loss: 0.490.. Validation accuracy: 0.879
Epoch 3/5.. Train loss: 0.724.. Validation loss: 0.528.. Validation accuracy: 0.852
Epoch 3/5.. Train loss: 0.910.. Validation loss: 0.511.. Validation accuracy: 0.858
Epoch 3/5.. Train loss: 0.886.. Validation loss: 0.496.. Validation accuracy: 0.852
Epoch 3/5.. Train loss: 0.702.. Validation loss: 0.465.. Validation accuracy: 0.857
Epoch 3/5.. Train loss: 0.797.. Validation loss: 0.485.. Validation accuracy: 0.863
Epoch 4/5.. Train loss: 0.611.. Validation loss: 0.474.. Validation accuracy: 0.867
Epoch 4/5.. Train loss: 0.701.. Validation loss: 0.494.. Validation accuracy: 0.860
Epoch 4/5.. Train loss: 0.836.. Validation loss: 0.425.. Validation accuracy: 0.882
Epoch 4/5.. Train loss: 0.760.. Validation loss: 0.439.. Validation accuracy: 0.881
Epoch 4/5.. Train loss: 0.675.. Validation loss: 0.403.. Validation accuracy: 0.881
Epoch 4/5.. Train loss: 0.773.. Validation loss: 0.417.. Validation accuracy: 0.876
Epoch 4/5.. Train loss: 0.631.. Validation loss: 0.436.. Validation accuracy: 0.886
Epoch 4/5.. Train loss: 0.663.. Validation loss: 0.447.. Validation accuracy: 0.876
Epoch 4/5.. Train loss: 0.712.. Validation loss: 0.437.. Validation accuracy: 0.883
Epoch 4/5.. Train loss: 0.757.. Validation loss: 0.433.. Validation accuracy: 0.880
Epoch 4/5.. Train loss: 0.749.. Validation loss: 0.428.. Validation accuracy: 0.873
Epoch 4/5.. Train loss: 0.782.. Validation loss: 0.435.. Validation accuracy: 0.872
Epoch 4/5.. Train loss: 0.601.. Validation loss: 0.416.. Validation accuracy: 0.886
Epoch 4/5.. Train loss: 0.768.. Validation loss: 0.410.. Validation accuracy: 0.891
Epoch 4/5.. Train loss: 0.607.. Validation loss: 0.411.. Validation accuracy: 0.873
Epoch 4/5.. Train loss: 0.723.. Validation loss: 0.377.. Validation accuracy: 0.897
Epoch 4/5.. Train loss: 0.691.. Validation loss: 0.420.. Validation accuracy: 0.890
Epoch 4/5.. Train loss: 0.553.. Validation loss: 0.412.. Validation accuracy: 0.887
Epoch 4/5.. Train loss: 0.793.. Validation loss: 0.418.. Validation accuracy: 0.886
Epoch 4/5.. Train loss: 0.854.. Validation loss: 0.394.. Validation accuracy: 0.894
Epoch 4/5.. Train loss: 0.738.. Validation loss: 0.417.. Validation accuracy: 0.888
Epoch 5/5.. Train loss: 0.585.. Validation loss: 0.438.. Validation accuracy: 0.874
Epoch 5/5.. Train loss: 0.608.. Validation loss: 0.465.. Validation accuracy: 0.863
Epoch 5/5.. Train loss: 0.765.. Validation loss: 0.435.. Validation accuracy: 0.874
Epoch 5/5.. Train loss: 0.604.. Validation loss: 0.423.. Validation accuracy: 0.877
Epoch 5/5.. Train loss: 0.484.. Validation loss: 0.405.. Validation accuracy: 0.886
Epoch 5/5.. Train loss: 0.795.. Validation loss: 0.342.. Validation accuracy: 0.899
Epoch 5/5.. Train loss: 0.502.. Validation loss: 0.345.. Validation accuracy: 0.904
Epoch 5/5.. Train loss: 0.667.. Validation loss: 0.363.. Validation accuracy: 0.899
Epoch 5/5.. Train loss: 0.507.. Validation loss: 0.374.. Validation accuracy: 0.899
Epoch 5/5.. Train loss: 0.672.. Validation loss: 0.398.. Validation accuracy: 0.887
Epoch 5/5.. Train loss: 0.629.. Validation loss: 0.368.. Validation accuracy: 0.899
Epoch 5/5.. Train loss: 0.688.. Validation loss: 0.372.. Validation accuracy: 0.892
Epoch 5/5.. Train loss: 0.603.. Validation loss: 0.395.. Validation accuracy: 0.891
Epoch 5/5.. Train loss: 0.705.. Validation loss: 0.411.. Validation accuracy: 0.882
Epoch 5/5.. Train loss: 0.681.. Validation loss: 0.420.. Validation accuracy: 0.879
Epoch 5/5.. Train loss: 0.582.. Validation loss: 0.404.. Validation accuracy: 0.879
Epoch 5/5.. Train loss: 0.750.. Validation loss: 0.373.. Validation accuracy: 0.881
Epoch 5/5.. Train loss: 0.645.. Validation loss: 0.441.. Validation accuracy: 0.895
Epoch 5/5.. Train loss: 0.988.. Validation loss: 0.421.. Validation accuracy: 0.888
Epoch 5/5.. Train loss: 0.739.. Validation loss: 0.455.. Validation accuracy: 0.876
Epoch 5/5.. Train loss: 0.986.. Validation loss: 0.395.. Validation accuracy: 0.885
PS C:\Users\sebby\OneDrive\Documents\Python Scripts> python predict.py C:\Users\sebby\Downloads\Dendrobium-kingianum.jpg .\checkpoints\checkpoint.pth --top_k 3 --category_names cat_to_name.json      
C:\Users\sebby\OneDrive\Documents\Python Scripts\utils.py:72: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(filepath)
C:\Users\sebby\anaconda3\Lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\Users\sebby\anaconda3\Lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Predicted classes and probabilities:
lotus lotus: 88.72%
sweet pea: 5.59%
columbine: 4.56%
PS C:\Users\sebby\OneDrive\Documents\Python Scripts> 